{"version":3,"sources":["store/Actions.ts","store/AppContext.tsx","components/Layouts/ProtectedRoute.tsx","services/api.ts","pages/Game.tsx","pages/Home.tsx","utils/helper.ts","pages/Login.tsx","pages/Register.tsx","MainRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ACTION_SET_SET_USER","ACTION_SET_LOGGED_IN","Actions","payload","type","reducer","state","action","console","log","user","loggedIn","initialState","loggedInUser","Store","React","createContext","StoreProvider","children","useReducer","globalState","globalDispatch","Provider","value","UseGlobalContext","useContext","ProtectedRoute","Component","component","rest","render","props","to","pathname","from","location","TIMEOUT","process","BASE_URL","execApi","endpoint","resultPromise","method","data","token","window","headers","Authorization","baseURL","axios","post","put","timeout","get","params","Promise","resolve","reject","then","resultData","error","message","success","catch","errorData","response","Game","useState","game","setGame","loading","setLoading","notifed","setNotified","useEffect","fetchGame","status","playerHealth","notification","a","gameId","match","onAttack","powerAttack","dragonAttack","useInterval","onGiveUp","title","className","subTitle","tags","color","wonBy","extra","span","style","paddingLeft","paddingRight","textAlign","name","size","block","background","danger","dragonHealth","marginTop","disabled","onClick","marginRight","height","overflow","width","header","bordered","dataSource","logs","renderItem","item","Item","Home","createGame","history","push","_id","icon","SmileOutlined","email","USER_LOCAL_KEY","setAuthuser","localStorage","setItem","Layout","Content","layout","labelCol","wrapperCol","tailLayout","offset","LoginForm","setError","onFinish","values","_token","userReposne","gutter","justify","align","padding","initialValues","remember","onFinishFailed","errorInfo","label","rules","required","Password","htmlType","RegisterForm","getFieldValue","validator","_","Error","valuePropName","MainRoute","getItem","auth","exact","path","Login","Register","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeee4ff2.chunk.js","sourcesContent":["// import { User } from \"./AppContext\";\nimport { User, GlobalState } from \"./interfaces\";\n\nconst ACTION_SET_SET_USER = \"ACTION_SET_USER\";\nconst ACTION_SET_LOGGED_IN = \"ACTION_SET_LOGGED_IN\";\n\nexport const Actions = {\n  setUser: (payload: User) => {\n    return { payload, type: ACTION_SET_SET_USER };\n  },\n  setLoggedIn: (payload: Boolean) => {\n    return { payload, type: ACTION_SET_LOGGED_IN };\n  },\n};\n\nexport function reducer(\n  state: any,\n  action: { type: string; payload: User | Boolean }\n): GlobalState {\n  switch (action.type) {\n    case ACTION_SET_SET_USER:\n      console.log(\"USER\", action.payload);\n      return { ...state, user: action.payload };\n    case ACTION_SET_LOGGED_IN:\n      return { ...state, loggedIn: action.payload };\n    default:\n      return state;\n  }\n}\n","import React, { Reducer, useContext } from \"react\";\nimport { reducer } from \"./Actions\";\nimport { GlobalState } from \"./interfaces\";\n\nconst initialState: GlobalState = {\n  loggedIn: false,\n  loggedInUser: null,\n};\n\nexport const Store = React.createContext<GlobalState | any>(initialState);\n\nexport function StoreProvider({\n  children,\n}: JSX.ElementChildrenAttribute): JSX.Element {\n  const [globalState, globalDispatch] = React.useReducer(reducer, initialState);\n  return (\n    <Store.Provider value={{ globalState, globalDispatch }}>\n      {children}\n    </Store.Provider>\n  );\n}\n\nexport const UseGlobalContext = () => useContext(Store);\n","import React from \"react\";\n// import { checkAuthuser } from \"libs/auth\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { UseGlobalContext } from \"../../store/AppContext\";\n\nexport default function ProtectedRoute({ component: Component, ...rest }: any) {\n  const { globalState } = UseGlobalContext();\n  return (\n    <Route\n      {...rest}\n      render={(props: any) => {\n        console.log(\"auth hreer\", rest);\n        return globalState &&\n          typeof globalState.loggedInUser === \"object\" &&\n          globalState.loggedIn !== false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n","import axios from \"axios\";\nimport { IResponse } from \"../store/interfaces\";\n\n/* API's  STUB */\nconst TIMEOUT =\n  typeof process.env.TIMEOUT === \"number\" ? process.env.TIMEOUT : 1000;\nconst BASE_URL =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3001/api/\"\n    : \"api/\";\nexport function execApi(\n  endpoint: string,\n  method = \"GET\",\n  data = {}\n): Promise<IResponse> {\n  const token = window[\"_token\"] || \"\";\n\n  const headers = { Authorization: \"Bearer \" + token };\n  const baseURL = BASE_URL;\n  let resultPromise: Promise<any>;\n  if (method === \"POST\") {\n    resultPromise = axios.post(endpoint, data, { baseURL, headers });\n  } else if (method === \"PUT\") {\n    resultPromise = axios.put(endpoint, data, {\n      baseURL,\n      headers,\n      timeout: TIMEOUT,\n    });\n  } else {\n    resultPromise = axios.get(endpoint, {\n      baseURL,\n      params: data,\n      headers,\n      timeout: TIMEOUT,\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    resultPromise\n      .then(function ({ data }) {\n        let resultData: IResponse = {\n          error: true,\n          message: \"Could not complete request\",\n          data: null,\n        };\n        if (data) {\n          resultData = {\n            error: !data.success,\n            message: data.message,\n            data: data.data,\n          };\n        } else {\n          resultData = { error: true, message: \"Could not complete request\" };\n        }\n        console.log(\"resultData \" + endpoint, resultData);\n        resolve(resultData);\n      })\n      .catch(function (error) {\n        console.log(\"ERRROROOROR\", error);\n        let errorData: IResponse = {\n          error: true,\n          message: \"\",\n          data: \"Api error\",\n        };\n        if (error.response) {\n          errorData.data = error.response.data.message;\n        } else {\n          errorData.data = error.message;\n        }\n        resolve(errorData);\n      });\n  });\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport logo from \"../logo.svg\";\nimport \"../App.css\";\nimport {\n  Button,\n  Col,\n  PageHeader,\n  List,\n  Row,\n  Tag,\n  Spin,\n  Result,\n  Modal,\n  message,\n  notification,\n} from \"antd\";\nimport useInterval from \"use-interval\";\n\nimport { UseGlobalContext } from \"../store/AppContext\";\nimport { execApi } from \"../services/api\";\nimport { IGame } from \"../store/interfaces\";\nimport { exec } from \"node:child_process\";\n\nfunction Game(props: any) {\n  const [game, setGame] = useState<IGame | null>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const { globalState } = UseGlobalContext();\n  const [notifed, setNotified] = useState(false);\n  useEffect(() => {\n    fetchGame();\n  }, []);\n\n  useEffect(() => {\n    if (game && !game.status && !notifed) {\n      setNotified(true);\n      const status = game.playerHealth > 0 ? \"success\" : \"error\";\n      notification[status]({\n        message: status === \"success\" ? \"You won!\" : \"Dragon won\",\n      });\n    }\n  }, [game]);\n\n  const fetchGame = async () => {\n    const { gameId } = props.match.params;\n    const response = await execApi(\"game/\" + gameId);\n    if (!response.error) {\n      setGame(response.data);\n    } else {\n      setGame(null);\n    }\n  };\n\n  const onAttack = async (powerAttack = false) => {\n    const { gameId } = props.match.params;\n    setLoading(true);\n    try {\n      const response = await execApi(\"game/user-attack/\" + gameId, \"POST\", {\n        powerAttack,\n      });\n      setLoading(false);\n      if (!response.error) {\n        setGame(response.data);\n      } else {\n        message.error(\"Could not attack\");\n      }\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  const dragonAttack = async () => {\n    const { gameId } = props.match.params;\n    if (!(game && game.status)) {\n      return;\n    }\n    try {\n      const response = await execApi(\n        \"game/dragon-attack/\" + gameId,\n        \"POST\",\n        {}\n      );\n      if (!response.error) {\n        setGame(response.data);\n      } else {\n        message.error(\"Could not attack\");\n      }\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  useInterval(dragonAttack, 2000);\n\n  const onGiveUp = async () => {\n    const { gameId } = props.match.params;\n    // if (loading) return;\n    if (game && game.playerHealth <= 0) return;\n    setLoading(true);\n    try {\n      const response = await execApi(\"game/giveup/\" + gameId, \"POST\", {});\n      setLoading(false);\n      if (!response.error) {\n        setGame(response.data);\n      } else {\n        message.error(\"Could not attack\");\n      }\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      {game ? (\n        <PageHeader\n          title=\"\"\n          className=\"site-page-header\"\n          subTitle=\"This is a subtitle\"\n          tags={\n            game.status ? (\n              <Tag color=\"blue\">Running</Tag>\n            ) : game.wonBy === \"Player\" ? (\n              <Tag color=\"green\">Player won</Tag>\n            ) : (\n              <Tag color=\"red\">Dragon won</Tag>\n            )\n          }\n          extra={[]}\n        >\n          <Row>\n            <Col\n              span={14}\n              style={{\n                paddingLeft: 25,\n                paddingRight: 25,\n              }}\n            >\n              <Row>\n                <Col\n                  span={12}\n                  style={{\n                    textAlign: \"center\",\n\n                    paddingLeft: 25,\n                    paddingRight: 25,\n                  }}\n                >\n                  <h3>{globalState.user.name}</h3>\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    block\n                    style={{ background: \"green\" }}\n                  >\n                    {game.playerHealth}\n                  </Button>\n                </Col>\n                <Col\n                  span={12}\n                  style={{\n                    textAlign: \"center\",\n                    paddingLeft: 5,\n                    paddingRight: 5,\n                  }}\n                >\n                  <h3>Dragon</h3>\n                  <Button type=\"primary\" size=\"large\" block danger>\n                    {game.dragonHealth}\n                  </Button>\n                </Col>\n              </Row>\n              {game.status && (\n                <div style={{ textAlign: \"center\", marginTop: 30 }}>\n                  <h3>Action Buttons</h3>\n                  <Button\n                    size=\"large\"\n                    disabled={loading}\n                    onClick={() => onAttack()}\n                    style={{ marginRight: 10 }}\n                    type=\"primary\"\n                  >\n                    ATTACK\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    disabled={loading}\n                    onClick={() => onAttack(true)}\n                    style={{ marginRight: 10 }}\n                    type=\"primary\"\n                  >\n                    BLAST\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    disabled={loading}\n                    onClick={onGiveUp}\n                    style={{ marginRight: 10 }}\n                    type=\"primary\"\n                  >\n                    GIVE UP\n                  </Button>\n                </div>\n              )}\n            </Col>\n            <Col span={8}>\n              <List\n                style={{ height: 400, overflow: \"auto\", width: \"100%\" }}\n                header={<div>Commentry Box</div>}\n                bordered\n                dataSource={game.logs}\n                renderItem={(item) => <List.Item>{item.log}</List.Item>}\n              />\n            </Col>\n          </Row>\n        </PageHeader>\n      ) : game === null ? (\n        <Result\n          title={`Error`}\n          status=\"error\"\n          subTitle={`Could not find game`}\n          extra={\n            <Button type=\"primary\" key=\"console\">\n              Go Back\n            </Button>\n          }\n        />\n      ) : (\n        <Spin size=\"large\" />\n      )}\n    </Fragment>\n  );\n}\n\nexport default Game;\n","import React from \"react\";\nimport logo from \"../logo.svg\";\nimport \"../App.css\";\nimport { Button, message, Result } from \"antd\";\nimport { SmileOutlined } from \"@ant-design/icons\";\n\nimport { UseGlobalContext } from \"../store/AppContext\";\nimport { execApi } from \"../services/api\";\n\nfunction Home(props: any) {\n  const { globalState } = UseGlobalContext();\n  const createGame = async () => {\n    try {\n      const response = await execApi(\"/game\", \"POST\", {});\n      if (!response.error) {\n        props.history.push(\"/game/\" + response.data._id);\n      } else {\n        message.error(\"Could not create game!\");\n      }\n    } catch (error) {\n      message.error(\"Could not create game!\");\n    }\n  };\n  return (\n    <Result\n      title={`Hello ${globalState.user.name}`}\n      icon={<SmileOutlined />}\n      subTitle={`Email - ${globalState.user.email}`}\n      extra={\n        <Button onClick={createGame} type=\"primary\" key=\"console\">\n          Start New Game\n        </Button>\n      }\n    />\n  );\n}\n\nexport default Home;\n","const USER_LOCAL_KEY = \"GSI_TOKEN\";\n\nexport function getAuthuser() {\n  return localStorage.getItem(USER_LOCAL_KEY);\n}\n\nexport function setAuthuser(token: string) {\n  return localStorage.setItem(USER_LOCAL_KEY, token);\n}\n\nexport function checkAuthuser() {\n  return localStorage.getItem(USER_LOCAL_KEY);\n}\n\nexport function removeAuthuser() {\n  return localStorage.removeItem(USER_LOCAL_KEY);\n}\n","import { Form, Input, Button, Checkbox, Alert, Layout, Row, Col } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { execApi } from \"../services/api\";\nimport { Actions } from \"../store/Actions\";\nimport { UseGlobalContext } from \"../store/AppContext\";\nimport { setAuthuser } from \"../utils/helper\";\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 12 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst LoginForm = (props: any) => {\n  const [error, setError] = React.useState<string>();\n  const { globalState, globalDispatch } = UseGlobalContext();\n  const onFinish = async (values: any) => {\n    setError(\"\");\n    const response = await execApi(\"login\", \"POST\", values);\n    console.log({ response });\n    if (response.error) {\n      setError(\n        typeof response.data === \"string\"\n          ? response.data\n          : response.message || \"Something went wrong\"\n      );\n      return;\n    }\n    globalDispatch(Actions.setLoggedIn(!!response.data));\n    window._token = response.data._token;\n    setAuthuser(response.data._token);\n    const userReposne = await execApi(\"currentUser\");\n    if (!userReposne.error) {\n      globalDispatch(Actions.setUser(userReposne.data));\n    }\n    props.history.push(\"/\");\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Row gutter={16} justify=\"center\" align=\"middle\">\n        <Col span={12} style={{ padding: 20 }}>\n          <h1 style={{ textAlign: \"center\" }}>Login</h1>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            {error && <Alert message={error} type=\"error\" />}\n            <br />\n            <br />\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\",\n                },\n                { required: true, message: \"Please input your username!\" },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password!\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n              &nbsp;&nbsp;&nbsp;<Link to=\"/register\">Register</Link>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default LoginForm;\n","import { Form, Input, Button, Checkbox, Alert, Layout, Row, Col } from \"antd\";\nimport React from \"react\";\nimport { execApi } from \"../services/api\";\nimport { Actions } from \"../store/Actions\";\nimport { UseGlobalContext } from \"../store/AppContext\";\nimport { setAuthuser } from \"../utils/helper\";\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst RegisterForm = (props: any) => {\n  const [error, setError] = React.useState<string>();\n  const { globalState, globalDispatch } = UseGlobalContext();\n  const onFinish = async (values: any) => {\n    setError(\"\");\n    const response = await execApi(\"register\", \"POST\", values);\n    console.log({ response });\n    if (response.error) {\n      setError(\n        typeof response.data === \"string\"\n          ? response.data\n          : response.message || \"Something went wrong\"\n      );\n      return;\n    }\n    globalDispatch(Actions.setLoggedIn(!!response.data));\n    window._token = response.data._token;\n    setAuthuser(response.data._token);\n    const userReposne = await execApi(\"currentUser\");\n    if (!userReposne.error) {\n      globalDispatch(Actions.setUser(userReposne.data));\n    }\n    props.history.push(\"/\");\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Row gutter={16} justify=\"center\" align=\"middle\">\n        <Col span={18} style={{ padding: 20 }}>\n          <h1 style={{ textAlign: \"center\" }}>Register</h1>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            {error && <Alert message={error} type=\"error\" />}\n            <br />\n            <br />\n            <Form.Item\n              label=\"name\"\n              name=\"name\"\n              rules={[{ required: true, message: \"Please input your name!\" }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\",\n                },\n                { required: true, message: \"Please input your username!\" },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password!\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Confirm Password\"\n              name=\"cpassword\"\n              rules={[\n                { required: true, message: \"Please input your password!\" },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue(\"password\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(\n                        \"The two passwords that you entered do not match!\"\n                      )\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default RegisterForm;\n","import { Spin } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n// import { checkAuthuser } from \"libs/auth\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/Layouts/ProtectedRoute\";\nimport Game from \"./pages/Game\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { execApi } from \"./services/api\";\nimport { Actions } from \"./store/Actions\";\nimport { UseGlobalContext } from \"./store/AppContext\";\nimport { IResponse } from \"./store/interfaces\";\nimport { checkAuthuser, getAuthuser } from \"./utils/helper\";\n\nexport default function MainRoute({ component: Component }: any) {\n  const { globalState, globalDispatch } = UseGlobalContext();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    try {\n      const token = getAuthuser();\n      console.log({ token });\n      if (token) {\n        setLoading(true);\n        window._token = token;\n        execApi(\"/currentUser\").then((response: IResponse) => {\n          setLoading(false);\n          if (response.error) {\n            console.log(\"Invalid User\" + response.message);\n\n            return;\n          }\n          globalDispatch(Actions.setUser(response.data));\n          globalDispatch(Actions.setLoggedIn(!!response.data));\n        });\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  }, []);\n  if (loading) return <Spin />;\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ProtectedRoute\n          auth={{ user: globalState.loggedInUser }}\n          exact\n          path=\"/\"\n          component={Home}\n        ></ProtectedRoute>\n        <ProtectedRoute\n          exact\n          path=\"/game/:gameId\"\n          component={Game}\n        ></ProtectedRoute>\n        <Route exact path=\"/login\" component={Login}></Route>\n        <Route exact path=\"/register\" component={Register}></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MainRoute from \"./MainRoute\";\nimport { StoreProvider } from \"./store/AppContext\";\nimport { execApi } from \"./services/api\";\ndeclare global {\n  interface Window {\n    _token: string;\n  }\n}\n\nfunction App() {\n  useEffect(() => {\n    const token = localStorage.getItem(\"GSI_token\");\n    if (token) window._token = token;\n  }, []);\n  return (\n    <StoreProvider>\n      <MainRoute></MainRoute>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}